{
  "hash": "127fa7b02afad42627a55f27a175b96e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: 'Create interactive figures from SVG images with {bscui}'\ndate: \"2024-02-05\"\ndescription: 'Presentation of the {bscui} R package'\ncategories:\n   - R\n   - Visualization\nimage: \"images/bscui.png\"\neditor_options: \n  chunk_output_type: console\n---\n\n\n![](images/bscui.png){width=\"200px\" fig-alt=\"bscui logo\"}\n\n<script src=\"https://patzaw.github.io/site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"https://patzaw.github.io/site_libs/bscui-0.0.1/bscui.min.js\"></script>\n<script src=\"https://patzaw.github.io/site_libs/bscui-binding-0.1.3/bscui.js\"></script>\n\nThe {[bscui](https://patzaw.github.io/bscui)} R package,\nmade recently available on [CRAN](https://cran.r-project.org/package=bscui),\nhas been written to transform SVG images into interactive figures.\nIt can be used to display data on a drawing in a report or to interact\nwith the drawing in a R {[shiny](https://shiny.posit.co/)} application.\nThe example below is very basic and is made to give a general idea of the\npackage principles.\nA more complete introduction is available in\nthe [package vignette](https://patzaw.github.io/bscui/articles/bscui.html).\n\nLet's load the package and start the demo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(bscui)\n```\n:::\n\n\n## Importing an SVG image\n\nIn this example, we use an SVG representation of the heliocentric system\ntaken from\nthe W3C: [https://dev.w3.org/SVG/tools/svgweb/samples/svg-files/heliocentric.svg](https://dev.w3.org/SVG/tools/svgweb/samples/svg-files/heliocentric.svg).\nThis SVG file can be read with the {[xml2](https://xml2.r-lib.org/)} package:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsvg <- xml2::read_xml(\n   \"https://dev.w3.org/SVG/tools/svgweb/samples/svg-files/heliocentric.svg\"\n)\n```\n:::\n\n\nThe imported SVG can be directly displayed with the `bscui()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbscui(svg)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"bscui html-widget html-fill-item\" id=\"htmlwidget-d79eeefbc5a7fd1ca807\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-d79eeefbc5a7fd1ca807\">{\"x\":{\"svg_txt\":\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 100 100\\\">\\n  <g stroke=\\\"#000\\\" fill=\\\"none\\\" stroke-width=\\\"0.2\\\">\\n    <path d=\\\"M5,60 A16,30 60,1,1 95,40\\\"/>\\n    <path d=\\\"M10,60 A15,30 60,1,1 90,40\\\"/>\\n    <path d=\\\"M15,60 A14,30 60,1,1 85,40\\\"/>\\n    <path d=\\\"M20,60 A13,30 60,1,1 80,40\\\"/>\\n    <circle cx=\\\"40\\\" cy=\\\"24\\\" r=\\\"4\\\" fill=\\\"#C0C\\\" stroke=\\\"none\\\"/>\\n    <circle cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"25\\\" fill=\\\"#FD0\\\" stroke=\\\"none\\\"/>\\n    <path d=\\\"M5,60 A16,30 60,0,0 95,40\\\"/>\\n    <path d=\\\"M10,60 A15,30 60,0,0 90,40\\\"/>\\n    <path d=\\\"M15,60 A14,30 60,0,0 85,40\\\"/>\\n    <path d=\\\"M20,60 A13,30 60,0,0 80,40\\\"/>\\n  <\\/g>\\n  <circle cx=\\\"60\\\" cy=\\\"61\\\" r=\\\"2\\\" fill=\\\"#F00\\\"/>\\n  <circle cx=\\\"78\\\" cy=\\\"25\\\" r=\\\"3\\\" fill=\\\"#0F0\\\"/>\\n  <circle cx=\\\"22\\\" cy=\\\"79\\\" r=\\\"3\\\" fill=\\\"#00F\\\"/>\\n<\\/svg>\\n\",\"ui_elements\":null,\"element_styles\":[],\"element_attributes\":[],\"sanitize_attributes\":true,\"show_menu\":true,\"menu_width\":\"30px\",\"zoom_min\":0.5,\"zoom_max\":20,\"zoom_step\":1.1,\"clip\":false,\"default_png_scale\":1,\"selection_color\":\"orange\",\"selection_opacity\":0.5,\"selection_width\":4,\"hover_color\":{\"button\":\"yellow\",\"selectable\":\"cyan\",\"none\":\"transparent\"},\"hover_opacity\":0.5,\"hover_width\":4,\"structure_shapes\":[\"rect\",\"circle\",\"ellipse\",\"line\",\"polyline\",\"polygon\",\"path\"],\"dblclick_timeout\":250,\"hover_timeout\":100},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\nThe figure can be grabbed with mouse and enlarged or shrunk using\nthe mouse wheel. Clicking on the button at the top-left corner of the figure\ndisplays a menu with various functions, including resetting the view\nand exporting the figure in SVG or PNG format.\nSeveral configuration choices are made by default but can be changed\nwith the `set_bscui_options()` function,\nsuch as the zoom range or the width of the menu.\n\n## Make SVG elements interactive\n\nWe can interact with the figure above (grab, zoom...) but not\nwith its elements. For example, we would like to be able to interact with\nthe sun and the planets turning around it.\n\nTo make it possible, we need\nthe SVG elements to be identifiable with an 'id' attribute.\nUnfortunately, it is not the case in the SVG file we took.\nThus, let's add first this attribute with {xml2}.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nxml2::xml_ns_strip(svg)\ncircles <- xml2::xml_find_all(svg, \"//circle\")\nfor(i in 1:length(circles)){\n   circle <- circles[[i]]\n   color <- xml2::xml_attr(circle, \"fill\")\n   if(color == \"#FD0\"){\n      id <- \"Sun\"\n   }\n   if(color == \"#F00\"){\n      id <- \"Mercury\"\n   }\n   if(color == \"#0F0\"){\n      id <- \"Venus\"\n   }\n   if(color == \"#00F\"){\n      id <- \"Earth\"\n   }\n   if(color == \"#C0C\"){\n      id <- \"Mars\"\n   }\n   xml2::xml_attr(circle, \"id\") <- id\n}\n```\n:::\n\n\nThe elements can then be made interactive with the `set_bscui_ui_elements()`\nfunction which takes as second argument a data frame with the following\ncolumns:\n\n- **id**: the element identifier\n- **ui_type**: either \"selectable\" (several elements can be selected),\n\"button\" (action will be triggered by clicking), \"none\" (no action on click)\n- **title**: a description of the element to display when the mouse hovers over\nthe element\n\n\n::: {.cell}\n\n```{.r .cell-code}\nui_elements <- data.frame(\n   id = c(\"Sun\", \"Mercury\", \"Venus\", \"Earth\", \"Mars\"),\n   ui_type = c(\"button\", rep(\"selectable\", 4))\n)\nwp_links <- c(\n   \"Sun\"=\"https://en.wikipedia.org/wiki/Sun\", \n   \"Mercury\"=\"https://en.wikipedia.org/wiki/Mercury_(planet)\", \n   \"Venus\"=\"https://en.wikipedia.org/wiki/Venus\", \n   \"Earth\"=\"https://en.wikipedia.org/wiki/Earth\", \n   \"Mars\"=\"https://en.wikipedia.org/wiki/Mars\"\n)\nui_elements$title <- sprintf(\n   paste(\n      '<div style=\"padding:5px;',\n      'border:black 1px solid; background:#FFFFF0AA;\">',\n      '<strong><a href=\"%s\" target=\"_blank\">%s</a></strong>',\n      '</div>'\n   ),\n   wp_links[ui_elements$id], ui_elements$id\n)\nbscui(svg) |> \n   set_bscui_ui_elements(ui_elements)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"bscui html-widget html-fill-item\" id=\"htmlwidget-e8310b0f08f4d6784340\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-e8310b0f08f4d6784340\">{\"x\":{\"svg_txt\":\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg viewBox=\\\"0 0 100 100\\\">\\n  <g stroke=\\\"#000\\\" fill=\\\"none\\\" stroke-width=\\\"0.2\\\">\\n    <path d=\\\"M5,60 A16,30 60,1,1 95,40\\\"/>\\n    <path d=\\\"M10,60 A15,30 60,1,1 90,40\\\"/>\\n    <path d=\\\"M15,60 A14,30 60,1,1 85,40\\\"/>\\n    <path d=\\\"M20,60 A13,30 60,1,1 80,40\\\"/>\\n    <circle cx=\\\"40\\\" cy=\\\"24\\\" r=\\\"4\\\" fill=\\\"#C0C\\\" stroke=\\\"none\\\" id=\\\"Mars\\\"/>\\n    <circle cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"25\\\" fill=\\\"#FD0\\\" stroke=\\\"none\\\" id=\\\"Sun\\\"/>\\n    <path d=\\\"M5,60 A16,30 60,0,0 95,40\\\"/>\\n    <path d=\\\"M10,60 A15,30 60,0,0 90,40\\\"/>\\n    <path d=\\\"M15,60 A14,30 60,0,0 85,40\\\"/>\\n    <path d=\\\"M20,60 A13,30 60,0,0 80,40\\\"/>\\n  <\\/g>\\n  <circle cx=\\\"60\\\" cy=\\\"61\\\" r=\\\"2\\\" fill=\\\"#F00\\\" id=\\\"Mercury\\\"/>\\n  <circle cx=\\\"78\\\" cy=\\\"25\\\" r=\\\"3\\\" fill=\\\"#0F0\\\" id=\\\"Venus\\\"/>\\n  <circle cx=\\\"22\\\" cy=\\\"79\\\" r=\\\"3\\\" fill=\\\"#00F\\\" id=\\\"Earth\\\"/>\\n<\\/svg>\\n\",\"ui_elements\":{\"id\":[\"Sun\",\"Mercury\",\"Venus\",\"Earth\",\"Mars\"],\"ui_type\":[\"button\",\"selectable\",\"selectable\",\"selectable\",\"selectable\"],\"title\":[\"<div style=\\\"padding:5px; border:black 1px solid; background:#FFFFF0AA;\\\"> <strong><a href=\\\"https://en.wikipedia.org/wiki/Sun\\\" target=\\\"_blank\\\">Sun<\\/a><\\/strong> <\\/div>\",\"<div style=\\\"padding:5px; border:black 1px solid; background:#FFFFF0AA;\\\"> <strong><a href=\\\"https://en.wikipedia.org/wiki/Mercury_(planet)\\\" target=\\\"_blank\\\">Mercury<\\/a><\\/strong> <\\/div>\",\"<div style=\\\"padding:5px; border:black 1px solid; background:#FFFFF0AA;\\\"> <strong><a href=\\\"https://en.wikipedia.org/wiki/Venus\\\" target=\\\"_blank\\\">Venus<\\/a><\\/strong> <\\/div>\",\"<div style=\\\"padding:5px; border:black 1px solid; background:#FFFFF0AA;\\\"> <strong><a href=\\\"https://en.wikipedia.org/wiki/Earth\\\" target=\\\"_blank\\\">Earth<\\/a><\\/strong> <\\/div>\",\"<div style=\\\"padding:5px; border:black 1px solid; background:#FFFFF0AA;\\\"> <strong><a href=\\\"https://en.wikipedia.org/wiki/Mars\\\" target=\\\"_blank\\\">Mars<\\/a><\\/strong> <\\/div>\"]},\"element_styles\":[],\"element_attributes\":[],\"sanitize_attributes\":true,\"show_menu\":true,\"menu_width\":\"30px\",\"zoom_min\":0.5,\"zoom_max\":20,\"zoom_step\":1.1,\"clip\":false,\"default_png_scale\":1,\"selection_color\":\"orange\",\"selection_opacity\":0.5,\"selection_width\":4,\"hover_color\":{\"button\":\"yellow\",\"selectable\":\"cyan\",\"none\":\"transparent\"},\"hover_opacity\":0.5,\"hover_width\":4,\"structure_shapes\":[\"rect\",\"circle\",\"ellipse\",\"line\",\"polyline\",\"polygon\",\"path\"],\"dblclick_timeout\":250,\"hover_timeout\":100},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\nThe identified elements can be further customized with the `set_bscui_styles()`\nand the `set_bscui_attributes()` functions.\n\n## Shiny\n\nThe identified elements can be further leveraged in a shiny application.\nThe code chunk below show a very simple example of such an application\nwith the heliocentric SVG image used so far.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(shiny)\nui <- fluidPage(\n   fluidRow(\n      column(6, bscuiOutput(\"heliocentric\")),\n      column(\n         6,\n         tags$ul(\n            tags$li(\"Hovered:\", textOutput(\"hovered\", inline=TRUE)),\n            tags$li(\"Operated button:\", textOutput(\"operated\", inline=TRUE)),\n            tags$li(\"Selected:\", textOutput(\"selected\", inline=TRUE))\n         )\n      )\n   )\n)\nserver <- function(input, output, session){\n   output$heliocentric <- renderBscui({\n      bscui(svg)|>\n         set_bscui_ui_elements(ui_elements)\n   })\n   output$hovered <- renderText({\n      input$heliocentric_hovered\n   })\n   output$operated <- renderText({\n      print(input$heliocentric_operated)\n      sprintf(\n         \"%s (%s click)\",\n         input$heliocentric_operated$id,\n         input$heliocentric_operated$click\n      )\n   })\n   output$selected <- renderText({\n      input$heliocentric_selected\n   })\n}\nrunApp(shinyApp(ui, server))\n```\n:::\n\n\nThe `bscuiOutput()` and `renderBscui()` functions are used to instantiate the\nwidget and the following information is exposed to Shiny:\n\n- `input$bscuiID_hovered` reports selected elements\n- `input$bscuiID_hovered` reports operated button elements\n- `input$bscuiID_hovered` reports hovered elements\n\n`bscuiID` is used to refer to the figure output id, \"heliocentric\" in the\nexample above.\n\n### Figure modification\n\nThe figure can also be modified based on Shiny events by creating a\n\"bscui_Proxy\" object. It's done by calling the `bscuiProxy()` within the\nsever function. Functions like `order_bscui_elements()`, `add_bscui_element()`\nand `remove_bscui_elements()` are used to modify the SVG structure.\nThe `update_bscui_ui_elements()`, `update_bscui_attributes()`\nand `update_bscui_styles()` functions are used to update identified elements.\nFinally the `update_bscui_selection()` and `click_bscui_element()` functions\nare used to trigger specific elements.\n\nAll the functions above are further described and exemplified in\nthe [package vignette](https://patzaw.github.io/bscui/articles/bscui.html).\nAnd an advanced Shiny application is provided within the package:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshiny::runApp(system.file(\"examples\", \"shiny-anatomogram\", package = \"bscui\"))\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../site_libs/bscui-0.0.3/bscui.min.js\"></script>\n<script src=\"../site_libs/bscui-binding-0.1.5/bscui.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}